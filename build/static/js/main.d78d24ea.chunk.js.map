{"version":3,"sources":["component/UI/Card.js","component/Expense/ExpensesFilter.js","component/Expense/ExpenseDate.js","component/Expense/ExpenseItem.js","component/Expense/ExpensesList.js","component/Chart/ChartBar.js","component/Chart/Chart.js","component/Expense/ExpensesChart.js","component/Expense/Expenses.js","component/NewExpense/ExpenseForm.js","component/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpenseList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expense","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSE","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d78d24ea.chunk.js","sourcesContent":["import './Card.css'\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value)\r\n    }\r\n\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css'\r\n\r\nfunction ExpenseDate(props) {\r\n    const month = props.date.toLocaleString('id-ID', {month: 'long'});\r\n    const day = props.date.toLocaleString('id-ID', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\nreturn (\r\n    <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div> \r\n        <div className=\"expense-date__year\">{year}</div> \r\n        <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default ExpenseDate;","import './ExpenseItem.css' ;\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\n\r\nfunction ExpenseItem(props) {   \r\n    return (\r\n    <li> \r\n        <Card className=\"expense-item\">\r\n            <ExpenseDate date={props.date}/>\r\n                <div className=\"expense-item__description\" >\r\n                <h2> {props.title} </h2> \r\n                <div className=\"expense-item__price\"> Rp. {props.amount} </div> \r\n            </div> \r\n        </Card>\r\n    </li>\r\n    )\r\n}\r\n\r\nexport default ExpenseItem ;","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport './ExpensesList.css'\r\n\r\nconst ExpenseList = props => {\r\n \r\n  if (props.items.length === 0){\r\n    return <h2 className=\"expenses-list__fallback\">Found No Expenses . </h2>\r\n  }\r\n\r\n    return <ul className=\"expenses-list\">\r\n        { props.items.map((expense) => (\r\n              <ExpenseItem \r\n                  key={expense.id}\r\n                  title={expense.title}\r\n                  amount={expense.amount}\r\n                  date={expense.date}\r\n              />\r\n          )\r\n         )}\r\n    </ul>\r\n}\r\nexport default ExpenseList;","import React from \"react\";\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue > 0 ) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{ height: barFillHeight }}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar","import React from \"react\";\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues)\r\n\r\n    return(\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map((dataPoint) => (\r\n                <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMaximum } label={dataPoint.label} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default Chart;","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = props => {\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0},\r\n        { label: 'Feb', value: 0},\r\n        { label: 'Mar', value: 0},\r\n        { label: 'Apr', value: 0},\r\n        { label: 'May', value: 0},\r\n        { label: 'Jun', value: 0},\r\n        { label: 'Jul', value: 0},\r\n        { label: 'Aug', value: 0},\r\n        { label: 'Sep', value: 0},\r\n        { label: 'Oct', value: 0},\r\n        { label: 'Nov', value: 0},\r\n        { label: 'Dec', value: 0},\r\n    ];\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount \r\n    }\r\n    \r\n    return <Chart dataPoints={chartDataPoints} />\r\n}\r\n\r\nexport default ExpensesChart;","import React, { useState } from \"react\";\r\nimport './Expenses.css'\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpenseList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst  Expense = (props) => {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n    \r\n    const filterChangeHandler = selectedYear =>{\r\n        setFilteredYear(selectedYear)    \r\n    }\r\n    const filteredExpenses = props.items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    })\r\n\r\n    return(\r\n    <div>\r\n        <Card className=\"expenses\">\r\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n         <ExpensesChart expenses={filteredExpenses}/>\r\n         <ExpenseList  items={filteredExpenses}/>\r\n        </Card>\r\n    </div>\r\n        )\r\n}\r\n\r\nexport default Expense;","import React ,{ useState } from 'react';\r\nimport './ExpenseForm.css'\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('') ;\r\n    const [enteredAmount, setEnteredAmount] = useState('') ;\r\n    const [enteredDate, setEnteredDate] = useState('') ;\r\n\r\n\r\n   const titleChangeHandler = (event) => {\r\n       setEnteredTitle(event.target.value);\r\n   }\r\n   const AmountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n    }\r\n   const DateChangeHandler = (event) => { \r\n        setEnteredDate(event.target.value);\r\n    }\r\n   \r\n   const submitHandler = (event) => {\r\n       event.preventDefault();\r\n\r\n       const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n      };\r\n       \r\n       props.onSaveExpenseData(expenseData);\r\n       setEnteredTitle('');\r\n       setEnteredAmount('');\r\n       setEnteredDate('');\r\n   }\r\n   \r\n   \r\n   \r\n   return( \r\n    <form onSubmit={submitHandler}>\r\n        <div className='new-expense__controls'>\r\n            <div className='new-expense__control'>\r\n                <label>Title</label>\r\n                <input type='text' value={enteredTitle} onChange={titleChangeHandler}/>\r\n            </div>\r\n            <div className='new-expense__control'>\r\n                <label>Amount</label>\r\n                <input type='number' min='0.01' step='0.01' value={enteredAmount} onChange={AmountChangeHandler} />\r\n            </div>\r\n            <div className='new-expense__control'>\r\n                <label>Date</label>\r\n                <input type='date' min='2019-01-01' value={enteredDate} onChange={DateChangeHandler} />\r\n            </div>\r\n        </div>\r\n        <div className='new-expense__actions'>\r\n            <button type='button' onClick={props.onCancel}>Cancel</button>\r\n            <button type='submit'>Add Expense</button>\r\n        </div>\r\n    </form>\r\n    )\r\n\r\n}\r\n\r\nexport default ExpenseForm;","import { useState } from 'react'\r\nimport './NewExpense.css'\r\n\r\nimport ExpenseForm from './ExpenseForm'\r\n\r\nconst NewExpense = (props) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const SaveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n        ...enteredExpenseData,\r\n        id:Math.random().toString()\r\n        \r\n        }\r\n        props.onAddExpense(expenseData)\r\n        setIsEditing(false);\r\n    }\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return (\r\n        <div className='new-expense'> \r\n            {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n            {isEditing && <ExpenseForm onSaveExpenseData={SaveExpenseDataHandler} onCancel={stopEditingHandler} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewExpense;","import { useState } from \"react\";\r\nimport Expenses from \"./component/Expense/Expenses\";\r\n\r\nimport NewExpense from \"./component/NewExpense/NewExpense\"\r\n\r\nconst DUMMY_EXPENSE = [\r\n  {\r\n    id :'1a',\r\n    title : 'Monitor',\r\n    amount : 5000000,\r\n    date : new Date(2020, 7 ,14)\r\n  },\r\n  {\r\n    id :'2a',\r\n    title : 'HeadSet',\r\n    amount : 1000000,\r\n    date : new Date(2021, 6 ,4)\r\n  },\r\n  {\r\n    id :'3a',\r\n    title : 'Keyboard',\r\n    amount : 1500000,\r\n    date : new Date(2022, 4 ,1)\r\n  },\r\n  {\r\n    id :'4a',\r\n    title : 'Mouse',\r\n    amount : 500000,\r\n    date : new Date(2022, 2 ,24)\r\n  },\r\n]\r\n\r\n\r\nconst App = () => {\r\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSE)\r\n  \r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return[expense, ...prevExpenses];\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses}/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom/client';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}